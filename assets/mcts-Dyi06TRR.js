const u=Array(64).fill(null);u[27]="w";u[28]="b";u[35]="b";u[36]="w";const v=[-9,-8,-7,-1,1,7,8,9],d=5e3;function h(t,n,e){if(n<0||n>=64||t[n])return[];const i=e==="b"?"w":"b",r=[];for(const o of v){const l=[];let s=n+o;if(!(Math.abs(n%8-s%8)>1))for(;s>=0&&s<64&&!(Math.abs(s%8-(s-o)%8)>1);){const a=t[s];if(a===i)l.push(s);else if(a===e){r.push(...l);break}else break;s+=o}}return r}function m(t,n,e){const i=h(t,n,e);if(i.length===0)return null;const r=[...t];return r[n]=e,i.forEach(o=>r[o]=e),r}function b(t,n){for(let e=0;e<64;e++)if(t[e]===null&&h(t,e,n).length>0)return!1;return!0}function w(t){return t.reduce((n,e)=>(e==="b"?n.black++:e==="w"&&n.white++,n),{black:0,white:0})}function M(t){return t.black>t.white?"Black":t.white>t.black?"White":"Draw"}function f(t){const{black:n,white:e}=w(t),i=b(t,"b"),r=b(t,"w");return n+e===64||i&&r}function g(t){const n=t.player==="b"?"w":"b",e=[];for(let i=0;i<64;i++){const r=m(t.board,i,t.player);r!==null&&e.push({parent:t,move:i,board:r,player:n,value:0,visit:0,children:[]})}return e}function T(t,n=Math.SQRT2){let e=null,i=-1/0;for(const r of t.children){if(r.visit===0)return r;const l=-r.value/r.visit+n*Math.sqrt(Math.log(t.visit)/r.visit);(e===null||l>i)&&(e=r,i=l)}return e}function k(t){const n=t.player,e=t.board.slice();let i=t.player;for(;!f(e);){const o=[];for(let c=0;c<64;c++){const p=h(e,c,i);p.length>0&&o.push({move:c,piecesToFlip:p})}if(o.length===0){i=i==="b"?"w":"b";continue}const{move:l,piecesToFlip:s}=o[Math.floor(Math.random()*o.length)],a=i==="b"?"w":"b";e[l]=i,s.forEach(c=>e[c]=i),i=a}switch(M(w(e))){case"Draw":return 0;case"Black":return n==="b"?1:-1;case"White":return n==="w"?1:-1}}function I(t,n){let e=t;for(;e!==null;)e.value+=n,e.visit++,e=e.parent}function P(t,n,e){const i={parent:null,move:null,board:t,player:n,value:0,visit:0,children:[]};for(;performance.now()-e<d;){let l=i;for(;l.children.length>0&&!f(l.board);)l=T(l);f(l.board)||l.visit>0&&(l.children.length===0&&(l.children=g(l)),l.children.length>0&&(l=l.children[0]));const s=k(l);I(l,s)}let r=null,o=-1;for(const l of i.children)l.visit>o&&(o=l.visit,r=l.move);return r}self.onmessage=t=>{const{board:n,player:e}=t.data,i=performance.now(),r=P(n,e,i);self.postMessage(r)};
